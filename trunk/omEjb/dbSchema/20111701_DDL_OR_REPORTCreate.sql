-- aku80 / 17.01.2011
-- MM
-- OR_REPORT anlegen

CREATE SEQUENCE OR_REPORT_S0 MINVALUE 0 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER NOCYCLE;

CREATE TABLE OR_REPORT
  (
    "ID"              NUMBER(38,0) NOT NULL ENABLE,
    "REPORTID"        VARCHAR2(60 BYTE),
    "REPORTNAME"      VARCHAR2(60 BYTE),
    "REPORTTYPE"      CHAR(3 BYTE),
    "CLIENT_ID"       VARCHAR2(20 CHAR) NOT NULL ENABLE,
    "LONGDESCRIPTION" VARCHAR2(2000 BYTE),
    "DETAILS" BLOB,
    "EXAMPLE" BLOB,
    "TARGETSYSTEM"        CHAR(2 BYTE),
    "AUTOMATICGENERATION" CHAR(1 BYTE),
    "VERSION"     NUMBER NOT NULL ENABLE,
    "USERNAME"    VARCHAR2(30 CHAR),
    "MACHINE"     VARCHAR2(64 CHAR),
    "PROGRAM"     VARCHAR2(48 CHAR),
    CONSTRAINT "OR_REPORT_PK" PRIMARY KEY ("ID"),
    CONSTRAINT "OR_REPORT_CREPORTID_UQ" UNIQUE ("REPORTID"),
    CONSTRAINT "OR_REPORT_F1" FOREIGN KEY ("CLIENT_ID") REFERENCES "MDDEV"."CLIENT" ("ID") ENABLE
  );
  
CREATE OR REPLACE TRIGGER "OR_REPORT_T1" BEFORE
  INSERT OR
  UPDATE ON OR_REPORT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
    /* Formatted on 29.11.2010 15:13:42 (QP5 v5.163.1008.3004) */
    BEGIN :NEW.username := SYS_CONTEXT (SECURITY_PKG.GET_CTX_NAME, 'APPLICATION_USER');
  :NEW.machine          := SYS_CONTEXT ('USERENV', 'HOST');
  :NEW.PROGRAM          := SYS_CONTEXT ('USERENV', 'MODULE');
END Partner_T1;
/

CREATE OR REPLACE TRIGGER "OR_REPORT_T0" BEFORE
  INSERT ON OR_REPORT FOR EACH ROW BEGIN IF :NEW.Id IS NULL THEN
  SELECT OR_REPORT_S0.NEXTVAL INTO :NEW.id FROM DUAL;
END IF;
END;
/